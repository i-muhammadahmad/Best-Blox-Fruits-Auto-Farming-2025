import { combineReducers } from 'redux';
import { persistReducer } from 'redux-persist'
import storage from 'redux-persist/lib/storage'
import sessionReducer from './sessionReducer';
import commonReducer from './commonReducer';
import clockInReducer from './clockInReducer';
import {
  ActivityCategoryReducer,
  ActivityCategoryStatusReducer,
  ActivitySetupReducer,
  ActivityLogReducer,
  ActivityAccessReducer,
  AuditInfractionsReducer,
  AuditErrorCategoryReducer,
  AuditErrorSeverityReducer,
  AuditReviewsReducer,
} from 'views/ActivityManagement/reducers';
import {
  BulkActivitySetupReducer,
  BulkActivityLogReducer,
} from 'views/BulkActivityManagement/reducers';
import {
  HolidayCategoryReducer,
  HolidayReducer
} from 'views/HolidaysManagement/reducers';
import {
  UsersReducer,
  UserReportReducer,
  RolesReducer,
  TimeZonesReducer,
  ObjectsReducer,
  ObjectTypesReducer,
  RolesAccessReducer
} from 'views/UserManagement/reducers';
import {
  ClientReducer,
  ContactBoardReducer,
  MeetingNotesReducer,
  //ClientInvoicesReducer
} from 'views/ClientManagement/reducers';
import {
  DesignationReducer,
  DesignationCategoryReducer
} from 'views/HRManagement/reducers';
import {
  OfficesReducer,
  DepartmentsReducer,
  WorkstationsReducer,
  SettingsReducer
} from 'views/Setups/reducers';
import {
  ShiftsReducer,
  EmployeesReducer,
  EmployeeShiftsReducer
} from 'views/EmployeeManagement/reducers';
import {
  TranscribeConfigReducer,
  TranscribeJobReducer
} from 'views/TranscribeManagement/reducers';
import {
  CompanyTypeReducer,
  CompanyReducer,
  CompanyContactReducer,
} from 'views/BusinessDevelopment/reducers';
import {
  QuizSetupReducer,
  QuizReducer
} from 'views/QuizManagement/reducers';
import {
  AssetTypesReducer,
  AssetAttributeReducer,
  AssetsReducer,
  AssetsReportReducer,
  //AssetApprovalsReducer
} from 'views/AssetManagement/reducers';
import {
  LeaveTypeReducer,
  LeaveScheduleReducer,
  LeaveConfigsReducer
} from 'views/AttendanceManagement/reducers';
/*import {
  ApprovalProfilesReducer,
} from 'views/Admin/reducers';*/
import {
  AuditFormInfractionReducer,
  AuditFormSetupReducer,
  AuditFormReducer
} from 'views/AuditFormManagement/reducers';

const presistConfig = {
  key: 'root',
  storage,
  whitelist: ['session']
}

const appReducer = combineReducers({
  session: sessionReducer,
  activityCategoryState: ActivityCategoryReducer,
  commonState: commonReducer,
  activityCategoryStatusState: ActivityCategoryStatusReducer,
  holidayCategoryState: HolidayCategoryReducer,
  holidayState: HolidayReducer,
  clientState: ClientReducer,
  activitySetupState: ActivitySetupReducer,
  activityLogState: ActivityLogReducer,
  clockInState: clockInReducer,
  activityAccessState: ActivityAccessReducer,
  auditInfractionsState: AuditInfractionsReducer,
  auditErrorCategoryState: AuditErrorCategoryReducer,
  auditErrorSeverityState: AuditErrorSeverityReducer,
  auditReviewsState: AuditReviewsReducer,
  bulkActivitySetupState: BulkActivitySetupReducer,
  bulkActivityLogState: BulkActivityLogReducer,
  userReportState: UserReportReducer,
  usersState: UsersReducer,
  rolesState: RolesReducer,
  timeZonesState: TimeZonesReducer,
  objectsState: ObjectsReducer,
  objectTypesState: ObjectTypesReducer,
  designationState: DesignationReducer,
  designationCategoryState: DesignationCategoryReducer,
  rolesAccessState: RolesAccessReducer,
  officesState: OfficesReducer,
  departmentsState: DepartmentsReducer,
  workstationsState: WorkstationsReducer,
  settingsState: SettingsReducer,
  shiftsState: ShiftsReducer,
  employeesState: EmployeesReducer,
  employeeShiftsState: EmployeeShiftsReducer,
  transcribeConfigState: TranscribeConfigReducer,
  transcribeJobState: TranscribeJobReducer,
  companyTypeState: CompanyTypeReducer,
  companyState: CompanyReducer,
  companyContactState: CompanyContactReducer,
  quizSetupState: QuizSetupReducer,
  quizState: QuizReducer,
  assetTypesState: AssetTypesReducer,
  assetAttributeState: AssetAttributeReducer,
  assetsState: AssetsReducer,
  AssetsReportState: AssetsReportReducer,
  //assetApprovalsState: AssetApprovalsReducer,
  contactBoardState: ContactBoardReducer,
  meetingNotesState: MeetingNotesReducer,
  //clientInvoicesState: ClientInvoicesReducer,
  leaveTypeState: LeaveTypeReducer,
  leaveScheduleState: LeaveScheduleReducer,
  leaveConfigsState: LeaveConfigsReducer,
  /*approvalProfilesState: ApprovalProfilesReducer,*/
  auditFormInfractionState: AuditFormInfractionReducer,
  auditFormSetupState: AuditFormSetupReducer,
  auditFormState: AuditFormReducer,
})

const RootReducer = (state, action) => {
  if (action.type === 'TOKEN_EXPIRE' || action.type === 'SESSION_LOGOUT') {
    state = undefined;
    localStorage.removeItem('token');
    sessionStorage.clear();
  }
  return appReducer(state, action)
}

export default persistReducer(presistConfig, RootReducer);

/*const rootReducer = combineReducers({
  session: sessionReducer
});

export default rootReducer;*/
